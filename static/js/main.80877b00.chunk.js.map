{"version":3,"sources":["images/dot.png","images/pen.png","images/erase.png","images/highlight.png","js/drawingBoard.js","containers/DrawingBoard/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Point","x","y","time","maxWidth","minWidth","this","Date","now","prototype","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","startPoint","control2","control1","endPoint","startWidth","endWidth","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","length","px","py","i","t","cx","point","cy","xdiff","ydiff","DrawingPad","canvas","options","_this","_handleMouseDown","event","which","_mouseButtonDown","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","target","velocityFilterWeight","throttle","minDistance","dotSize","penColor","penColor2","backgroundColor","onBegin","onEnd","fn","wait","result","storedContext","storedArgs","previous","timeout","later","apply","args","_i","arguments","remaining","clearTimeout","window","setTimeout","_strokeUpdate","_ctx","getContext","_data","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_isEmpty","style","touchAction","msTouchAction","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","removeEventListener","document","isEmpty","fromData","pointGroups","_fromData","_a","color","curve","_drawCurve","_drawDot","toData","isHighLight","localStorage","getItem","newPointGroup","isHighLighter","lastNode","pop","push","clientX","clientY","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","_addPoint","addEventListener","_lastPoints","_lastVelocity","_lastWidth","changeBrushColor","highligherColor","console","log","updateBrushWidth","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","floor","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","pointGroups_1","group","j","basicPoint","Index","props","startDrawing","index","setItem","state","hightlightColor","setState","selectedOption","selectedPx","drawingPad","globalCompositeOperation","data","updatePx","startErase","startHighlighting","onChangeColor","e","type","val","value","op50","convertHex","placeHolderColor","hexCode","opacity","hex","replace","parseInt","substring","getCss","getBrushWidth","getElementById","resizeCanvas","ratio","devicePixelRatio","offsetWidth","offsetHeight","scale","onresize","className","src","pen","alt","onClick","dot","id","name","onChange","eraser","highlighter","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80877b00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dot.69f073c4.png\";","module.exports = __webpack_public_path__ + \"static/media/pen.447a0165.png\";","module.exports = __webpack_public_path__ + \"static/media/erase.3bfa5ce6.png\";","module.exports = __webpack_public_path__ + \"static/media/highlight.f127e836.png\";","\n\nvar Point = (function () {\n    function Point(x, y, time, maxWidth, minWidth) {\n        this.x = x;\n        this.y = y;\n        this.time = time || Date.now();\n        this.maxWidth = maxWidth;\n        this.minWidth = minWidth;\n    }\n    Point.prototype.distanceTo = function (start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    };\n    Point.prototype.equals = function (other) {\n        return this.x === other.x && this.y === other.y && this.time === other.time;\n    };\n    Point.prototype.velocityFrom = function (start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    };\n    return Point;\n}());\n\nvar Bezier = (function () {\n    function Bezier(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    Bezier.fromPoints = function (points, widths) {\n        var c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        var c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    };\n    Bezier.calculateControlPoints = function (s1, s2, s3) {\n        var dx1 = s1.x - s2.x;\n        var dy1 = s1.y - s2.y;\n        var dx2 = s2.x - s3.x;\n        var dy2 = s2.y - s3.y;\n        var m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        var m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        var l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        var l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        var dxm = m1.x - m2.x;\n        var dym = m1.y - m2.y;\n        var k = l2 / (l1 + l2);\n        var cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        var tx = s2.x - cm.x;\n        var ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty)\n        };\n    };\n    Bezier.prototype.length = function () {\n        var steps = 10;\n        var length = 0;\n        var px;\n        var py;\n        for (var i = 0; i <= steps; i += 1) {\n            var t = i / steps;\n            var cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            var cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                var xdiff = cx - px;\n                var ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    };\n    Bezier.prototype.point = function (t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    };\n    return Bezier;\n}());\n\nfunction throttle(fn, wait) {\n    if (wait === void 0) { wait = 250; }\n    var previous = 0;\n    var timeout = null;\n    var result;\n    var storedContext;\n    var storedArgs;\n    var later = function () {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        var remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nvar DrawingPad = (function () {\n    function DrawingPad(canvas, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.canvas = canvas;\n        this.options = options;\n        this._handleMouseDown = function (event) {\n            if (event.which === 1) {\n                _this._mouseButtonDown = true;\n                _this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = function (event) {\n            if (_this._mouseButtonDown) {\n                _this._strokeMoveUpdate(event);\n            }\n        };\n        this._handleMouseUp = function (event) {\n            if (event.which === 1 && _this._mouseButtonDown) {\n                _this._mouseButtonDown = false;\n                _this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = function (event) {\n            event.preventDefault();\n            if (event.targetTouches.length === 1) {\n                var touch = event.changedTouches[0];\n                _this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = function (event) {\n            event.preventDefault();\n            var touch = event.targetTouches[0];\n            _this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = function (event) {\n            var wasCanvasTouched = event.target === _this.canvas;\n            if (wasCanvasTouched) {\n                event.preventDefault();\n                var touch = event.changedTouches[0];\n                _this._strokeEnd(touch);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options\n            ? options.minDistance\n            : 5);\n        this.dotSize =\n            options.dotSize ||\n            function dotSize() {\n                return (this.minWidth + this.maxWidth) / 2;\n            };\n        this.penColor = options.penColor || 'black';\n        this.penColor2 = options.penColor2 || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.onBegin = options.onBegin;\n        this.onEnd = options.onEnd;\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(DrawingPad.prototype._strokeUpdate, this.throttle)\n            : DrawingPad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d');\n        this._data = [];\n        this.clear();\n        this.on();\n    }\n    DrawingPad.prototype.clear = function () {\n        var _a = this, ctx = _a._ctx, canvas = _a.canvas;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._reset();\n        this._isEmpty = true;\n    };\n    DrawingPad.prototype.on = function () {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        if (window.PointerEvent) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    };\n    DrawingPad.prototype.off = function () {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.removeEventListener('pointermove', this._handleMouseMove);\n        document.removeEventListener('pointerup', this._handleMouseUp);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        document.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    };\n    DrawingPad.prototype.isEmpty = function () {\n        return this._isEmpty;\n    };\n    DrawingPad.prototype.fromData = function (pointGroups) {\n        var _this = this;\n        this.clear();\n        this._fromData(pointGroups, function (_a) {\n            var color = _a.color, curve = _a.curve;\n            return _this._drawCurve({ color: color, curve: curve });\n        }, function (_a) {\n            var color = _a.color, point = _a.point;\n            return _this._drawDot({ color: color, point: point });\n        });\n        this._data = pointGroups;\n    };\n    DrawingPad.prototype.toData = function () {\n        return this._data;\n    };\n    DrawingPad.prototype._strokeBegin = function (event) {\n        const isHighLight = localStorage.getItem(\"isHighlighter\");\n\n        let newPointGroup = {\n            color: this.penColor,\n            points: [],\n            maxWidth: this.maxWidth,\n            minWidth: this.minWidth\n        };\n\n        if (typeof this.onBegin === 'function') {\n            this.onBegin(event);\n        }\n\n        if (isHighLight === \"true\") {\n            newPointGroup = {\n                color: this.penColor2,\n                points: [],\n                maxWidth: this.maxWidth,\n                minWidth: this.minWidth,\n                isHighLighter: true\n            };\n        }\n\n        const lastNode = this._data.length > 0 && this._data[this._data.length - 1];\n        if (lastNode && lastNode.isHighLighter) {\n            this._data.pop();\n            this.fromData(this._data);\n        }\n\n        this._data.push(newPointGroup);\n        this._reset();\n        this._strokeUpdate(event);\n    };\n    DrawingPad.prototype._strokeUpdate = function (event) {\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n\n        var x = event.clientX;\n        var y = event.clientY;\n        var point = this._createPoint(x, y, this.maxWidth, this.minWidth);\n        var lastPointGroup = this._data[this._data.length - 1];\n        var lastPoints = lastPointGroup.points;\n        var lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        var isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        var color = lastPointGroup.color;\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            var curve = this._addPoint(point);\n            if (!lastPoint) {\n                this._drawDot({ color: color, point: point });\n            }\n            else if (curve) {\n                this._drawCurve({ color: color, curve: curve });\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                maxWidth: point.maxWidth,\n                minWidth: point.minWidth\n            });\n        }\n    };\n    DrawingPad.prototype._strokeEnd = function (event) {\n        this._strokeUpdate(event);\n        if (typeof this.onEnd === 'function') {\n            this.onEnd(event);\n        }\n    };\n    DrawingPad.prototype._handlePointerEvents = function () {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.addEventListener('pointermove', this._handleMouseMove);\n        document.addEventListener('pointerup', this._handleMouseUp);\n    };\n    DrawingPad.prototype._handleMouseEvents = function () {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        document.addEventListener('mouseup', this._handleMouseUp);\n    };\n    DrawingPad.prototype._handleTouchEvents = function () {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    };\n    DrawingPad.prototype._reset = function () {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n        this._ctx.fillStyle = this.penColor;\n    };\n    DrawingPad.prototype.changeBrushColor = function (penColor = null, highligherColor = null) {\n        if (penColor) {\n            this.penColor = penColor;\n        }\n        if (highligherColor) {\n            this.penColor2 = highligherColor;\n        }\n        console.log('this.penColor: ', this.penColor);\n    };\n    DrawingPad.prototype.updateBrushWidth = function (minWidth, maxWidth, dotSize) {\n        this.minWidth = minWidth;\n        this.maxWidth = maxWidth;\n        this.dotSize = dotSize;\n    };\n    DrawingPad.prototype._createPoint = function (x, y, maxWidth, minWidth) {\n        var rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, new Date().getTime(), maxWidth, minWidth);\n    };\n    DrawingPad.prototype._addPoint = function (point) {\n        var _lastPoints = this._lastPoints;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            var widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2]);\n            var curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    };\n    DrawingPad.prototype._calculateCurveWidths = function (startPoint, endPoint) {\n        console.log('endPoint: ', endPoint);\n        console.log('startPoint: ', startPoint);\n        var velocity = this.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - this.velocityFilterWeight) * this._lastVelocity;\n        var newWidth = this._strokeWidth(velocity, endPoint.maxWidth, endPoint.minWidth);\n        var widths = {\n            end: newWidth,\n            start: newWidth\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    };\n    DrawingPad.prototype._strokeWidth = function (velocity, maxWidth, minWidth) {\n        return Math.max(maxWidth / (velocity + 1), minWidth);\n    };\n    DrawingPad.prototype._drawCurveSegment = function (x, y, width) {\n        var ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    };\n    DrawingPad.prototype._drawCurve = function (_a) {\n        var color = _a.color, curve = _a.curve;\n        var ctx = this._ctx;\n\n        var widthDelta = curve.endWidth - curve.startWidth;\n        var drawSteps = Math.floor(curve.length()) * 2;\n        ctx.beginPath();\n\n        ctx.fillStyle = color;\n        for (var i = 0; i < drawSteps; i += 1) {\n            var t = i / drawSteps;\n            var tt = t * t;\n            var ttt = tt * t;\n            var u = 1 - t;\n            var uu = u * u;\n            var uuu = uu * u;\n            var x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            var y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            var width = Math.min(curve.startWidth + ttt * widthDelta, this.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    };\n    DrawingPad.prototype._drawDot = function (_a) {\n        var color = _a.color, point = _a.point;\n        var ctx = this._ctx;\n        var width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    };\n    DrawingPad.prototype._fromData = function (pointGroups, drawCurve, drawDot) {\n        for (var _i = 0, pointGroups_1 = pointGroups; _i < pointGroups_1.length; _i++) {\n            var group = pointGroups_1[_i];\n            var color = group.color, points = group.points, maxWidth = group.maxWidth, minWidth = group.minWidth;\n            if (points.length > 1) {\n                for (var j = 0; j < points.length; j += 1) {\n                    var basicPoint = points[j];\n                    var point = new Point(basicPoint.x, basicPoint.y, basicPoint.time, maxWidth, minWidth);\n                    // this.penColor = color;\n                    if (j === 0) {\n                        this._reset();\n                    }\n                    var curve = this._addPoint(point);\n                    if (curve) {\n                        drawCurve({ color: color, curve: curve });\n                    }\n                }\n            }\n            else {\n                this._reset();\n                drawDot({\n                    color: color,\n                    point: points[0]\n                });\n            }\n        }\n    };\n    return DrawingPad;\n}());\n\nexport default DrawingPad;\n\n","import React, { Component } from 'react'\nimport './DrawingBoard.css';\nimport DrawingPad from '../../js/drawingBoard';\nimport pen from '../../images/pen.png';\nimport dot from '../../images/dot.png';\nimport eraser from '../../images/erase.png'\nimport highlighter from '../../images/highlight.png';\n\nexport default class Index extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            penColor: 'black',\n            hightlightColor: 'rgba(0,0,0,0.5)',\n            selectedOption: 1,\n            selectedPx: 'small',\n            placeHolderColor: 'black'\n        }\n\n        this.drawingPad = null;\n        this.canvas = null;\n    }\n\n    componentDidMount() {\n        localStorage.setItem(\"isHighlighter\", \"false\");\n\n        const canvas = document.getElementById('drawing-pad');\n        this.canvas = canvas;\n        function resizeCanvas() {\n            const ratio = Math.max(window.devicePixelRatio || 1, 1);\n            canvas.width = canvas.offsetWidth * ratio;\n            canvas.height = canvas.offsetHeight * ratio;\n            canvas.getContext(\"2d\").scale(ratio, ratio);\n        }\n\n        window.onresize = resizeCanvas;\n        resizeCanvas();\n\n        const drawingPad = new DrawingPad(canvas, {\n            backgroundColor: 'rgb(255, 255, 255)',\n            minWidth: 1,\n            maxWidth: 1,\n            dotSize: 1\n        });\n\n        this.drawingPad = drawingPad;\n\n    }\n\n    startDrawing = (index) => {\n\n        localStorage.setItem(\"isHighlighter\", \"false\");\n        const { penColor, hightlightColor } = this.state;\n        this.setState({ selectedOption: index, selectedPx: 'small' });\n        this.drawingPad.changeBrushColor(penColor, hightlightColor);\n        const ctx = this.canvas.getContext('2d');\n        ctx.globalCompositeOperation = 'source-over';\n        const data = this.drawingPad.toData();\n        if (data) {\n            const lastNode = data.length > 0 && data[data.length - 1];\n            if (lastNode && lastNode.isHighLighter) {\n                data.pop();\n                this.drawingPad.fromData(data);\n            }\n        }\n        window.setTimeout(() => this.updatePx('small'));\n\n    }\n\n    startErase = (index) => {\n        localStorage.setItem(\"isHighlighter\", \"false\");\n        this.setState({ selectedOption: index, selectedPx: null });\n        this.drawingPad.changeBrushColor('white');\n        var data = this.drawingPad.toData();\n        this.drawingPad.updateBrushWidth(10, 10, 10);\n        if (data) {\n            const lastNode = data.length > 0 && data[data.length - 1];\n            if (lastNode && lastNode.isHighLighter) {\n                data.pop();\n                this.drawingPad.fromData(data);\n            }\n        }\n        var ctx = this.canvas.getContext('2d');\n        ctx.globalCompositeOperation = 'destination-out';\n    }\n\n    startHighlighting = (index) => {\n        const { penColor, hightlightColor } = this.state;\n        this.setState({ selectedOption: index, selectedPx: null });\n        this.drawingPad.updateBrushWidth(5, 5, 5);\n        this.drawingPad.changeBrushColor(penColor, hightlightColor);\n        localStorage.setItem(\"isHighlighter\", \"true\");\n        var ctx = this.canvas.getContext('2d');\n        ctx.globalCompositeOperation = 'source-over';\n    }\n\n    onChangeColor = (e, type) => {\n        const val = e.target.value;\n        if (type === 'penColor') {\n            this.setState({ penColor: val });\n            this.drawingPad.changeBrushColor(val);\n        } else if (type === 'highLighter') {\n            const op50 = this.convertHex(val, 50);\n            this.setState({ hightlightColor: op50, placeHolderColor: val });\n            this.drawingPad.changeBrushColor(null, op50);\n        }\n    }\n\n    convertHex = (hexCode, opacity) => {\n        var hex = hexCode.replace('#', '');\n\n        if (hex.length === 3) {\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n\n        var r = parseInt(hex.substring(0, 2), 16),\n            g = parseInt(hex.substring(2, 4), 16),\n            b = parseInt(hex.substring(4, 6), 16);\n\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    }\n\n    getCss = (index) => {\n        const { selectedOption, selectedPx } = this.state;\n        if (typeof index === 'string') {\n            return selectedPx === index ? 'selected' : 'notSelected';\n        }\n        return selectedOption === index ? 'selected' : 'notSelected';\n    }\n\n    updatePx = (type) => {\n        const { selectedOption } = this.state;\n        if (selectedOption !== 1) return;\n        this.setState({ selectedPx: type });\n        const width = this.getBrushWidth(type);\n        this.drawingPad.updateBrushWidth(width, width, width);\n    }\n\n    getBrushWidth = (type) => {\n        switch (type) {\n            case 'small':\n                return 1;\n            case 'medium':\n                return 3;\n            case 'large':\n                return 5\n            default:\n                return null\n        }\n    }\n\n    render() {\n\n        const { penColor, placeHolderColor } = this.state;\n\n        return (\n            <div>\n                <h1 className=\"mainColor\">Drawing Board</h1>\n                <div className=\"wrapper\">\n                    <div className=\"leftPane\">\n                        <img src={pen} className={`padding10 large cursorP margin10 ${this.getCss(1)}`} alt=\"img\" onClick={() => this.startDrawing(1)} />\n                        <div>\n                            <img src={dot} className={`small margin10 cursorP ${this.getCss('small')}`} alt=\"img\" onClick={() => this.updatePx('small')} />\n                            <img src={dot} className={`medium margin10 marginB6 cursorP ${this.getCss('medium')}`} alt=\"img\" onClick={() => this.updatePx('medium')} />\n                            <img src={dot} className={`large margin10 marginB4 cursorP ${this.getCss('large')}`} alt=\"img\" onClick={() => this.updatePx('large')} />\n                        </div>\n                        <div>\n                            <span>Pen Color : </span><input type=\"color\" id=\"favcolor\" name=\"favcolor\" className={`margin10 cursorP`} value={penColor} onChange={(e) => this.onChangeColor(e, 'penColor')}></input>\n                        </div>\n                        <img src={eraser} id=\"erase\" className={`padding10 margin10 large cursorP ${this.getCss(2)}`} alt=\"img\" onClick={() => this.startErase(2)} />\n                        <div>\n                            <img src={highlighter} id=\"highlight\" className={`padding10 margin10 large cursorP ${this.getCss(3)}`} alt=\"img\" onClick={() => this.startHighlighting(3)} />\n                        </div>\n                        <div>\n                            <span>HL Color : </span><input type=\"color\" id=\"favcolor\" name=\"favcolor\" className={`margin10 cursorP`} value={placeHolderColor} onChange={(e) => this.onChangeColor(e, 'highLighter')}></input>\n                        </div>\n                    </div>\n                    <div className=\"middlePane\">\n                        <canvas id=\"drawing-pad\" className=\"drawingPad\" width=\"1000\" height=\"1000\"></canvas>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport DrawingBoard from './containers/DrawingBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <DrawingBoard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}